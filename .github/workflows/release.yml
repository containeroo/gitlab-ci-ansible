name: create tag
on:
  push:
    branches:
      - master
jobs:
  generate:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.generate_tag.outputs.tag_name }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - name: generate tag
        id: generate_tag
        run: |
          ansible_version=$(grep -Eo 'ansible==([0-9]+(\.[0-9]+)*)' requirements.txt | cut -d'=' -f3)
          echo "ansible_version: $ansible_version"

          latest_git_tag=$(git tag | sort -V | tail -1)
          echo "latest_git_tag: $latest_git_tag"

          # Extract the build number (assuming format is like 9.2.0-build1)
          build_identifier=$(echo $latest_git_tag | cut -d'-' -f2)
          build_number=$(echo $build_identifier | cut -d'p' -f2)

          if [ -n "$build_number" ]; then
              new_build_number=$((build_number + 1))
          else
              new_build_number=1
          fi

          new_version="$ansible_version-build$new_build_number"
          echo "new_version: $new_version"

          echo "tag_name=${new_version}" >> "${GITHUB_OUTPUT}"
  create:
    needs: generate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: rickstaa/action-create-tag@v1
        with:
          tag: "${{ needs.generate.outputs.tag_name }}"
          tag_exists_error: false
  release:
    needs: create
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - name: Build Changelog from PRs with labels
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          configuration: ".github/changelog-configuration.json"
      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: "${{ needs.generate.outputs.tag_name }}"
          release_name: ${{ github.ref }}
          body: ${{steps.github_release.outputs.changelog}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Log in to GitHub Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          labels: |
            org.opencontainers.image.title=gitlab-ci-ansible
            org.opencontainers.image.description=gitlab-ci-ansible
            org.opencontainers.image.url=https://github.com/containeroo/gitlab-ci-ansible
            org.opencontainers.image.source=https://github.com/containeroo/gitlab-ci-ansible
            org.opencontainers.image.version="${{ needs.generate.outputs.tag_name }}"
          tags: |
            ghcr.io/containeroo/gitlab-ci-ansible:latest
            ghcr.io/containeroo/gitlab-ci-ansible: "${{ needs.generate.outputs.tag_name }}"
