name: create tag
on:
  push:
    branches:
      - master
jobs:
  generate-tag:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.set_output.outputs.tag_name }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - name: Update datasource in Dockerfile
        id: update_datasource
        run: |
          ansible_version=$(grep -Eo 'ansible==([0-9]+(\.[0-9]+)*)' requirements.txt | cut -d'=' -f3)
          echo "ansible_version: $ansible_version"

          latest_git_tag=$(git tag | sort -V | tail -1)
          echo "latest_git_tag: $latest_git_tag"

          # Extract the build number (assuming format is like 9.2.0-build1)
          build_identifier=$(echo $latest_git_tag | cut -d'-' -f2)
          build_number=$(echo $build_identifier | cut -d'p' -f2)

          if [ -n "$build_number" ]; then
              new_build_number=$((build_number + 1))
          else
              new_build_number=1
          fi

          new_version="$ansible_version-build$new_build_number"
          echo "new_version: $new_version"

          echo "TAG_NAME=${new_version}" >> "${GITHUB_ENV}"
          echo "::set-output name=tag_name::$new_version"
  create-tag:
    needs: generate-tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: rickstaa/action-create-tag@v1
        id: tag_create
        with:
          tag: "v${{ needs.generate-tag.outputs.tag_name }}"
          tag_exists_error: false
